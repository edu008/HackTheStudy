"""Restrukturierung: Separate Tabelle UploadedFile und angepasste Upload-Tabelle

Revision ID: e12be8eba6ad
Revises: 
Create Date: 2025-04-07 13:15:55.903763

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e12be8eba6ad'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('migrations')
    with op.batch_alter_table('flashcard', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tags', sa.JSON(), nullable=True))
        batch_op.create_index(batch_op.f('ix_flashcard_upload_id'), ['upload_id'], unique=False)
        batch_op.drop_constraint('flashcard_upload_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'upload', ['upload_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('question', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_question_upload_id'), ['upload_id'], unique=False)
        batch_op.drop_constraint('question_upload_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'upload', ['upload_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('upload', schema=None) as batch_op:
        batch_op.add_column(sa.Column('overall_processing_status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('upload_metadata', sa.JSON(), nullable=True))
        batch_op.drop_index('ix_upload_processing_status')
        batch_op.drop_index('ix_upload_upload_date')
        batch_op.create_index(batch_op.f('ix_upload_overall_processing_status'), ['overall_processing_status'], unique=False)
        batch_op.drop_column('file_content_1')
        batch_op.drop_column('file_name_2')
        batch_op.drop_column('upload_date')
        batch_op.drop_column('file_name_3')
        batch_op.drop_column('file_name_4')
        batch_op.drop_column('file_content_4')
        batch_op.drop_column('file_name_5')
        batch_op.drop_column('file_content_5')
        batch_op.drop_column('processing_status')
        batch_op.drop_column('file_content_3')
        batch_op.drop_column('token_count')
        batch_op.drop_column('file_name_1')
        batch_op.drop_column('file_content_2')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('upload', schema=None) as batch_op:
        batch_op.add_column(sa.Column('file_content_2', postgresql.BYTEA(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_name_1', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('token_count', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_content_3', postgresql.BYTEA(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('processing_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_content_5', postgresql.BYTEA(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_name_5', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_content_4', postgresql.BYTEA(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_name_4', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_name_3', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('upload_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_name_2', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('file_content_1', postgresql.BYTEA(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_upload_overall_processing_status'))
        batch_op.create_index('ix_upload_upload_date', ['upload_date'], unique=False)
        batch_op.create_index('ix_upload_processing_status', ['processing_status'], unique=False)
        batch_op.drop_column('upload_metadata')
        batch_op.drop_column('overall_processing_status')

    with op.batch_alter_table('question', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('question_upload_id_fkey', 'upload', ['upload_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_question_upload_id'))

    with op.batch_alter_table('flashcard', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('flashcard_upload_id_fkey', 'upload', ['upload_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_flashcard_upload_id'))
        batch_op.drop_column('tags')

    op.create_table('migrations',
    sa.Column('id', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('applied_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='migrations_pkey')
    )
    # ### end Alembic commands ###
