[supervisord]
nodaemon=true
logfile=/dev/null
logfile_maxbytes=0
user=root
strip_ansi=true
identifier=supervisor-api
minfds=65536
minprocs=200

[unix_http_server]
file=/tmp/supervisor-api.sock
chmod=0760
chown=root:root

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor-api.sock

[program:redis]
command=/usr/bin/redis-server /etc/redis/redis.conf
autostart=true
autorestart=true
priority=10
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
# Wichtig: startsecs und stopwaitsecs anpassen
startsecs=3
stopwaitsecs=10

[program:gunicorn]
command=gunicorn -c /app/gunicorn.conf.py "app:app"
directory=/app
autostart=true
autorestart=true
priority=20
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
environment=PYTHONPATH=/app,LOG_PREFIX="[API] "
# Starte nur nach erfolgreichem Redis-Start
depends_on=redis
# Mehr Zeit für Startup einräumen
startsecs=10
startretries=5
stopwaitsecs=30

[program:health_monitor]
command=python health_monitor.py
directory=/app
autostart=true
autorestart=true
priority=30
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
redirect_stderr=true
environment=PYTHONPATH=/app,LOG_PREFIX="[HEALTH] "
# Starte nur nach erfolgreichem Gunicorn-Start
depends_on=gunicorn
startsecs=5
startretries=3

[group:api]
programs=redis,gunicorn,health_monitor
priority=999 