[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisord.log
logfile_maxbytes=50MB
logfile_backups=5
loglevel=info
pidfile=/tmp/supervisor-worker.pid
childlogdir=/var/log/
umask=022
identifier=supervisor-worker
directory=/app
nocleanup=true
minfds=65536
minprocs=200
strip_ansi=true

[unix_http_server]
file=/tmp/supervisor-worker.sock
chmod=0760
chown=root:root

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor-worker.sock

[program:worker]
command=celery -A tasks worker --loglevel=info --pool=solo
directory=/app
autostart=true
autorestart=true
stderr_logfile=/proc/1/fd/2
stdout_logfile=/proc/1/fd/1
redirect_stderr=true
user=root

[program:healthcheck]
command=python -c "
import time
import json
import psutil
import http.server
import socketserver

class HealthHandler(http.server.BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/ping':
            self.send_response(200)
            self.send_header('Content-Type', 'application/json')
            self.end_headers()
            health_data = {
                'status': 'healthy',
                'memory': psutil.virtual_memory().percent,
                'cpu': psutil.cpu_percent(interval=0.1),
                'uptime': time.time()
            }
            self.wfile.write(json.dumps(health_data).encode())
        else:
            self.send_response(404)
            self.end_headers()
    
    def log_message(self, *args):
        pass

socketserver.TCPServer(('', 8080), HealthHandler).serve_forever()
"
autostart=true
autorestart=true
stderr_logfile=/proc/1/fd/2
stdout_logfile=/proc/1/fd/1
redirect_stderr=true
user=root

[program:self_monitor]
command=python -c "
import time
import psutil

while True:
    cpu = psutil.cpu_percent()
    mem = psutil.virtual_memory().percent
    disk = psutil.disk_usage('/').percent
    print('[INFO] System Status - CPU: {}%, RAM: {}%, Disk: {}%'.format(cpu, mem, disk))
    time.sleep(60)
"
autostart=true
autorestart=true
stderr_logfile=/proc/1/fd/2
stdout_logfile=/proc/1/fd/1
redirect_stderr=true
user=root

[group:worker]
programs=worker,healthcheck,self_monitor
priority=999 