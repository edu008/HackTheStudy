# Beispiel-Umgebungsvariablen für den HackTheStudy Backend Worker
# Kopiere diese Datei nach .env und ersetze die Platzhalter.
# Füge diese .env Datei NICHT zum Git Repository hinzu, wenn sie Secrets enthält!

# -- Umgebung --
# Steuert das Ladeverhalten der Konfiguration ('dev' oder 'prod')
UMGEBUNG=dev

# -- Datenbank-Konfiguration --
# In Produktion (prod) wird erwartet, dass DATABASE_URL von der Plattform gesetzt wird.
# Für Entwicklung (dev): Entweder DATABASE_URL setzen oder die lokalen Defaults in config.py anpassen.
# Beispiel für lokale .env (wenn nicht der Default in config.py genutzt wird):
# DATABASE_URL=postgresql://user:password@localhost:5432/dbname
DATABASE_URL=

# -- Redis-Konfiguration --
# In Produktion (prod) wird erwartet, dass REDIS_URL von der Plattform gesetzt wird.
# Für Entwicklung (dev): Entweder REDIS_URL setzen oder die einzelnen Komponenten unten definieren.
# Beispiel für lokale .env (wenn nicht der Default 'redis://localhost:6379/0' genutzt wird):
# REDIS_URL=redis://:your_local_redis_password@localhost:6379/0
REDIS_URL=
# Alternative (Fallback für dev, wenn REDIS_URL nicht gesetzt ist):
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD= # Optional: Passwort für lokales Redis (leer lassen, wenn keins)
# REDIS_DB=0

# -- OpenAI Konfiguration --
# WICHTIG: Setze deinen OpenAI API Key als Secret in der Deployment-Umgebung!
OPENAI_API_KEY=sk-your_openai_api_key_here # NICHT COMMITEN!
OPENAI_MODEL=gpt-4o
# OPENAI_CACHE_ENABLED=true # (Optional, Default: true in config.py)
# OPENAI_CACHE_TTL=86400   # (Optional, Default: 86400 in config.py)
# OPENAI_MAX_RETRIES=3     # (Optional, Default: 3 in config.py)

# -- Worker / Celery Konfiguration --
# Anzahl der parallelen Worker-Prozesse. Wird von config.py je nach UMGEBUNG gesetzt (Default: dev=1, prod=4)
# Kann hier überschrieben werden.
# WORKER_CONCURRENCY=4
# Celery Pool Typ (Default: prefork in config.py)
# CELERY_POOL=prefork
# Celery Tuning (Defaults in config.py)
# CELERY_WORKER_PREFETCH_MULTIPLIER=1
# CELERY_MAX_TASKS_PER_CHILD=10

# -- Logging Konfiguration --
# Detailgrad des Loggings (Default: dev=DEBUG, prod=INFO in config.py)
# LOGGING_LEVEL=INFO
# LOGGING_FORMAT="[%(asctime)s] [%(levelname)s] [%(name)s.%(funcName)s:%(lineno)d] %(message)s" # (Optional, Default in config.py)
# USE_COLORED_LOGS=true # (Optional, Default: true)

# -- Sonstige Konfiguration --
TZ=Europe/Zurich # Zeitzone
HEALTH_PORT=8080 # Port für den Healthcheck-Server (muss mit Docker EXPOSE übereinstimmen)
# PYTHONPATH=/app:/app/backend:/app/backend/worker:/app/backend/main # (Normalerweise im Dockerfile gesetzt)
# WORKER_CONTAINER_NAME=hackthestudy-worker # (Optional, zur Identifikation)
# DIGITAL_OCEAN_APP_NAME=hackthestudy-backend # (Optional, zur Identifikation)