# Informatik-Prüfung: Grundlagen der Programmierung und Datenstrukturen

## Teil 1: Grundlagen der Programmierung

### Frage 1
Was ist der Unterschied zwischen Kompilierung und Interpretation?
- Kompilierung übersetzt den gesamten Quellcode in Maschinensprache vor der Ausführung
- Interpretation führt den Code Zeile für Zeile aus, ohne vorherige vollständige Übersetzung
- Kompilierte Programme laufen in der Regel schneller als interpretierte Programme
- Interpretierte Sprachen bieten oft mehr Flexibilität während der Entwicklung

### Frage 2
Erklären Sie die Prinzipien der objektorientierten Programmierung.
Die vier Hauptprinzipien sind:
1. Abstraktion: Komplexität reduzieren, indem nur relevante Eigenschaften dargestellt werden
2. Kapselung: Daten und Methoden werden in Objekten zusammengefasst und vor externem Zugriff geschützt
3. Vererbung: Eigenschaften und Methoden können von einer Klasse an eine andere weitergegeben werden
4. Polymorphismus: Objekte können verschiedene Formen annehmen und auf unterschiedliche Weise auf dieselbe Nachricht reagieren

### Frage 3
Was ist der Unterschied zwischen einer Klasse und einem Objekt?
Eine Klasse ist eine Vorlage oder ein Bauplan, der Attribute und Methoden definiert.
Ein Objekt ist eine Instanz einer Klasse, die konkrete Werte für die Attribute hat und die Methoden ausführen kann.

## Teil 2: Datenstrukturen

### Frage 4
Vergleichen Sie Arrays und verkettete Listen.
- Arrays haben einen festen Speicherbereich und ermöglichen direkten Zugriff auf Elemente (O(1))
- Verkettete Listen haben dynamische Größe und ermöglichen effizientes Einfügen/Löschen, aber langsamen Zugriff (O(n))
- Arrays haben bessere Cache-Lokalität
- Verkettete Listen benötigen zusätzlichen Speicher für Zeiger

### Frage 5
Erklären Sie den Unterschied zwischen Stack und Queue.
- Stack: LIFO (Last In, First Out) - Das zuletzt eingefügte Element wird zuerst entfernt
- Queue: FIFO (First In, First Out) - Das zuerst eingefügte Element wird zuerst entfernt
- Stack-Operationen: push (einfügen) und pop (entfernen)
- Queue-Operationen: enqueue (einfügen) und dequeue (entfernen)

### Frage 6
Was ist ein Binärbaum und was ist ein balancierter Binärbaum?
Ein Binärbaum ist eine Datenstruktur, bei der jeder Knoten höchstens zwei Kinder hat.
Ein balancierter Binärbaum ist ein Binärbaum, bei dem die Höhe der beiden Teilbäume jedes Knotens sich um höchstens 1 unterscheidet, was zu einer Suchkomplexität von O(log n) führt.

## Teil 3: Algorithmen

### Frage 7
Erklären Sie die Zeitkomplexität der folgenden Sortieralgorithmen:
- Bubble Sort: O(n²) im Durchschnitt und im schlechtesten Fall
- Quick Sort: O(n log n) im Durchschnitt, O(n²) im schlechtesten Fall
- Merge Sort: O(n log n) in allen Fällen
- Insertion Sort: O(n²) im Durchschnitt und im schlechtesten Fall, aber O(n) im besten Fall

### Frage 8
Was ist der Unterschied zwischen Tiefen- und Breitensuche in Graphen?
- Tiefensuche (DFS): Erkundet einen Pfad so weit wie möglich, bevor andere Pfade erkundet werden
- Breitensuche (BFS): Erkundet alle Nachbarn eines Knotens, bevor zu den Nachbarn der Nachbarn übergegangen wird
- DFS verwendet typischerweise einen Stack (oder Rekursion)
- BFS verwendet typischerweise eine Queue

### Frage 9
Erklären Sie das Konzept der dynamischen Programmierung.
Dynamische Programmierung ist eine Methode zur Lösung komplexer Probleme, indem sie in einfachere Teilprobleme zerlegt werden. Die Lösungen der Teilprobleme werden gespeichert, um Wiederholungsberechnungen zu vermeiden. Sie wird oft für Optimierungsprobleme verwendet, bei denen die optimale Lösung aus optimalen Teillösungen besteht.

## Teil 4: Datenbanken

### Frage 10
Was ist der Unterschied zwischen SQL und NoSQL Datenbanken?
- SQL-Datenbanken sind relational und verwenden Tabellen mit festen Schemas
- NoSQL-Datenbanken sind nicht-relational und können verschiedene Datenmodelle verwenden (Dokument, Schlüssel-Wert, Spalte, Graph)
- SQL-Datenbanken bieten ACID-Eigenschaften und sind gut für komplexe Abfragen
- NoSQL-Datenbanken bieten oft bessere Skalierbarkeit und Flexibilität bei sich ändernden Datenstrukturen

### Frage 11
Erklären Sie die Normalformen in relationalen Datenbanken.
- 1NF: Jede Tabellenzelle enthält genau einen Wert
- 2NF: 1NF + alle Nicht-Schlüsselattribute sind vollständig funktional abhängig vom Primärschlüssel
- 3NF: 2NF + keine transitiven Abhängigkeiten von Nicht-Schlüsselattributen
- BCNF: 3NF + jede funktionale Abhängigkeit hat einen Superschlüssel als Determinante
- 4NF und 5NF behandeln Mehrwertabhängigkeiten und Join-Abhängigkeiten

### Frage 12
Was ist ein Index in einer Datenbank und wann sollte er verwendet werden?
Ein Index ist eine Datenstruktur, die den Zugriff auf Datensätze beschleunigt, ähnlich wie ein Inhaltsverzeichnis in einem Buch.
Indizes sollten für Spalten verwendet werden, die häufig in WHERE-Klauseln, JOIN-Bedingungen oder als Sortierkriterien verwendet werden.
Sie verbessern die Lesegeschwindigkeit, können aber Schreibvorgänge verlangsamen, da der Index aktualisiert werden muss.
